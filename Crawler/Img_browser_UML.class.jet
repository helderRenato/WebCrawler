{"diagram":"ClassDiagram","nodes":[{"methods":"public WebScrape()\npublic void setURL(String url)\npublic String getURL()\npublic void setCrawlFlag(boolean flag)\npublic boolean getCrawlFlag()\npublic boolean getImagesFlag()\npublic void setImagesFlag(boolean imagesFlag) \npublic boolean getVideosFlag()\npublic void setVideosFlag(boolean videosFlag) \npublic void setFiltro(String filtro)\npublic String getFiltro()\npublic Set<URL> getLinks() \npublic void setLinks(Set<URL> links)\npublic int getRecursionLimit() \npublic void setRecursionLimit(int recursionLimit)\npublic int getIterator() \npublic void setIterator(int iterator)\npublic void WebSpider()\nprivate void crawl(Set<URL> urls)\nprivate Set<URL> initURLS(final URL startURL) \nprivate void buscarImagens() \npublic ArrayList<String> getImagens()\npublic ArrayList<String> getVideos()\npublic ArrayList<Integer> getProfundidade()","x":50,"name":"WebScrape","y":10,"attributes":"String url; \nString urlLinks; \nboolean crawlFlag = false;\nboolean imagesFlag = false;\nboolean videosFlag = false;\nString filtro = null;\nArrayList<String> imgArray;\nArrayList<String> vidArray;\nArrayList<Integer> profundidade;\nSet<URL> links;\nint recursionLimit;\nint iterator;","id":1,"type":"ClassNode"},{"methods":"public void save(String path, ArrayList<String> imagens)\npublic ArrayList<String> open(String nome)\npublic void dowloadImagePackage(String url, String imageName, String path)","x":40,"name":"Disco","y":670,"attributes":"","id":0,"type":"ClassNode"},{"methods":"public Main()\nprivate void initComponents()\nprivate void homePanelMouseMoved(java.awt.event.MouseEvent evt)           \nprivate void homePanelMouseExited(java.awt.event.MouseEvent evt)\nprivate void homePanelMouseClicked(java.awt.event.MouseEvent evt)                                      \nprivate void otherMouseMoved(java.awt.event.MouseEvent evt)                               \nprivate void otherMouseClicked(java.awt.event.MouseEvent evt)                                \nprivate void otherMouseExited(java.awt.event.MouseEvent evt)                                \nprivate void searchButtonMouseClicked(java.awt.event.MouseEvent evt)\nprivate void jButton1ActionPerformed(java.awt.event.ActionEvent evt)\nprivate void jButton2ActionPerformed(java.awt.event.ActionEvent evt)\nprivate void crawlFlagFilterActionPerformed(java.awt.event.ActionEvent evt)                                              \nprivate void imagesFilterActionPerformed(java.awt.event.ActionEvent evt)                                            \nprivate void videosFilterActionPerformed(java.awt.event.ActionEvent evt)                                         \npublic void attImagesPanel(WebScrape webScrape)\npublic int calculatedWidth(BufferedImage img)\npublic BufferedImage resizeImage(BufferedImage originalImage)\npublic static void main(String args[])\n","x":690,"name":"Main","y":0,"attributes":"CardLayout cardLayout; \nJFileChooser fileChooser; \nWebScrape webScrape; \nString pasta = System.getProperty(\"java.class.path\");\nString path;\nprivate javax.swing.JCheckBox crawlFlagFilter;\nprivate javax.swing.JPanel filterPanel;\nprivate javax.swing.JPanel homeLayout;\nprivate javax.swing.JPanel homePanel;\nprivate javax.swing.JPanel imagensPanel;\nprivate javax.swing.JPanel imagensPanel1;\nprivate javax.swing.JCheckBox imagesFilter;\nprivate javax.swing.JButton jButton1;\nprivate javax.swing.JButton jButton2;\nprivate javax.swing.JLabel jLabel1;\nprivate javax.swing.JLabel jLabel2;\nprivate javax.swing.JLabel jLabel3;\nprivate javax.swing.JScrollPane jScrollPane1;\nprivate javax.swing.JScrollPane jScrollPane2;\nprivate javax.swing.JPanel leftLayout;\nprivate javax.swing.JPanel offlineLayout;\nprivate javax.swing.JPanel other;\nprivate javax.swing.JPanel rigthLayout;\nprivate javax.swing.JLabel searchButton;\nprivate javax.swing.JTextField searchField;\nprivate javax.swing.JTextField searchOfflineField;\nprivate javax.swing.JPanel searchPanel;\nprivate javax.swing.JTextField temaFilter;\nprivate javax.swing.JCheckBox videosFilter;\nDisco disco;\nint contador; \nArrayList<String> imagens; \nArrayList<String> videos; \nArrayList<Integer> profundidade; \nboolean results = false;","id":2,"type":"ClassNode"}],"edges":[{"Generalization Type":"Implementation","start":0,"end":2,"type":"GeneralizationEdge"},{"Generalization Type":"Implementation","start":1,"end":2,"type":"GeneralizationEdge"}],"version":"3.2"}
